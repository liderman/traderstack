// Code generated by protoc-gen-go. DO NOT EDIT.
// source: liderman/traderstack/info/v1/info.proto

package infov1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Финансовый инструмент.
type Instrument struct {
	Figi                 string   `protobuf:"bytes,1,opt,name=figi,proto3" json:"figi,omitempty"`
	Ticker               string   `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Isin                 string   `protobuf:"bytes,3,opt,name=isin,proto3" json:"isin,omitempty"`
	Lot                  int32    `protobuf:"varint,4,opt,name=lot,proto3" json:"lot,omitempty"`
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Exchange             string   `protobuf:"bytes,7,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instrument) Reset()         { *m = Instrument{} }
func (m *Instrument) String() string { return proto.CompactTextString(m) }
func (*Instrument) ProtoMessage()    {}
func (*Instrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_057debc6552c70e3, []int{0}
}

func (m *Instrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instrument.Unmarshal(m, b)
}
func (m *Instrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instrument.Marshal(b, m, deterministic)
}
func (m *Instrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instrument.Merge(m, src)
}
func (m *Instrument) XXX_Size() int {
	return xxx_messageInfo_Instrument.Size(m)
}
func (m *Instrument) XXX_DiscardUnknown() {
	xxx_messageInfo_Instrument.DiscardUnknown(m)
}

var xxx_messageInfo_Instrument proto.InternalMessageInfo

func (m *Instrument) GetFigi() string {
	if m != nil {
		return m.Figi
	}
	return ""
}

func (m *Instrument) GetTicker() string {
	if m != nil {
		return m.Ticker
	}
	return ""
}

func (m *Instrument) GetIsin() string {
	if m != nil {
		return m.Isin
	}
	return ""
}

func (m *Instrument) GetLot() int32 {
	if m != nil {
		return m.Lot
	}
	return 0
}

func (m *Instrument) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Instrument) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instrument) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

// Аккаунт.
type Account struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_057debc6552c70e3, []int{1}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Деньги.
type Money struct {
	Currency             string   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Money) Reset()         { *m = Money{} }
func (m *Money) String() string { return proto.CompactTextString(m) }
func (*Money) ProtoMessage()    {}
func (*Money) Descriptor() ([]byte, []int) {
	return fileDescriptor_057debc6552c70e3, []int{2}
}

func (m *Money) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Money.Unmarshal(m, b)
}
func (m *Money) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Money.Marshal(b, m, deterministic)
}
func (m *Money) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Money.Merge(m, src)
}
func (m *Money) XXX_Size() int {
	return xxx_messageInfo_Money.Size(m)
}
func (m *Money) XXX_DiscardUnknown() {
	xxx_messageInfo_Money.DiscardUnknown(m)
}

var xxx_messageInfo_Money proto.InternalMessageInfo

func (m *Money) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Money) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Instrument)(nil), "liderman.traderstack.info.v1.Instrument")
	proto.RegisterType((*Account)(nil), "liderman.traderstack.info.v1.Account")
	proto.RegisterType((*Money)(nil), "liderman.traderstack.info.v1.Money")
}

func init() {
	proto.RegisterFile("liderman/traderstack/info/v1/info.proto", fileDescriptor_057debc6552c70e3)
}

var fileDescriptor_057debc6552c70e3 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x49, 0xb6, 0x76, 0xee, 0x1d, 0x44, 0x82, 0x48, 0x90, 0x1d, 0xc6, 0x2e, 0xee, 0x62,
	0x47, 0xf1, 0xe4, 0xd1, 0xdd, 0x06, 0x13, 0xc6, 0x18, 0x3b, 0xc8, 0x2e, 0x31, 0x4d, 0x67, 0x58,
	0x9b, 0x48, 0x9a, 0x16, 0x87, 0xff, 0x8d, 0xc7, 0xfd, 0x29, 0xfe, 0x55, 0x92, 0x74, 0xdd, 0xaa,
	0x07, 0x4f, 0xfd, 0xbe, 0xbc, 0xdf, 0xf7, 0xf1, 0x78, 0x85, 0xbb, 0x4c, 0x26, 0xc2, 0xe4, 0x4c,
	0x4d, 0xac, 0x61, 0x89, 0x30, 0x85, 0x65, 0x7c, 0x37, 0x91, 0x2a, 0xd5, 0x93, 0x2a, 0xf6, 0xdf,
	0xe8, 0xdd, 0x68, 0xab, 0xc9, 0xa0, 0x01, 0xa3, 0x16, 0x18, 0x79, 0xa0, 0x8a, 0x47, 0x07, 0x04,
	0x30, 0x53, 0x85, 0x35, 0x65, 0x2e, 0x94, 0x25, 0x04, 0xba, 0xa9, 0xdc, 0x4a, 0x8a, 0x86, 0x68,
	0xdc, 0x5f, 0x7a, 0x4d, 0x6e, 0x20, 0xb4, 0x92, 0xef, 0x84, 0xa1, 0xd8, 0xbf, 0x1e, 0x9d, 0x63,
	0x65, 0x21, 0x15, 0xed, 0xd4, 0xac, 0xd3, 0xe4, 0x0a, 0x3a, 0x99, 0xb6, 0xb4, 0x3b, 0x44, 0xe3,
	0x60, 0xe9, 0x24, 0xb9, 0x85, 0x0b, 0x5e, 0x1a, 0x23, 0x14, 0xdf, 0xd3, 0xc0, 0x93, 0x27, 0xef,
	0x1a, 0x14, 0xcb, 0x05, 0x0d, 0xeb, 0x06, 0xa7, 0x1d, 0x2f, 0x3e, 0xf8, 0x1b, 0x53, 0x5b, 0x41,
	0x7b, 0x35, 0xdf, 0xf8, 0xd1, 0x3d, 0xf4, 0x9e, 0x38, 0xd7, 0xa5, 0xb2, 0xe4, 0x12, 0xb0, 0x4c,
	0x8e, 0x6b, 0x62, 0x99, 0x9c, 0xaa, 0xf0, 0xb9, 0x6a, 0xf4, 0x08, 0xc1, 0xb3, 0x56, 0x62, 0xff,
	0x6b, 0x07, 0xf4, 0x67, 0x87, 0x6b, 0x08, 0x2a, 0x96, 0x95, 0x4d, 0xb2, 0x36, 0xd3, 0x4f, 0x18,
	0x72, 0x9d, 0x47, 0xff, 0x9d, 0x6e, 0xda, 0x9f, 0xa9, 0x54, 0x2f, 0xdc, 0x8d, 0x17, 0xe8, 0x25,
	0x74, 0xaf, 0x55, 0xfc, 0x85, 0x3b, 0xf3, 0xd5, 0xec, 0x80, 0x07, 0xf3, 0x26, 0xb9, 0x6a, 0x25,
	0x5d, 0x20, 0x5a, 0xc7, 0xdf, 0xe7, 0xf1, 0xa6, 0x35, 0xde, 0xb8, 0xf1, 0x66, 0x1d, 0xbf, 0x86,
	0xfe, 0xc7, 0x3d, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x91, 0xa7, 0xd8, 0xe3, 0x01, 0x00,
	0x00,
}
